@use "sass:map";

// SF Font Include
@import url("../font/SF-pro/stylesheet.css");

// Space Ranger Font Include
@import url("../font/Space-Ranger/stylesheet.css");

// Variables

:root {
  --primary-font: "Space Ranger", sans-serif;
  --secondary-font: "SF Pro Text", sans-serif;
  --primary: #0a3051;
  --secondary: #30a9e5;
  --light: #ffffff;
  --light-alt: #EEE;
  --dark: #020d17;
  --dark-alt: #1e1f20;
  //   --bg-gradient: linear-gradient(0deg, #010a12 40.22%, #001629 119.53%);
  //   --cta: linear-gradient(180deg, #30a9e5 0%, #0e4777 100%);
  --line-height: 24px; /* Example line height */
  --collapsed-lines: 4; /* Number of lines to show when collapsed */
  --expanded-max-height: 10000px; /* Arbitrary large height to allow full expansion */
}

$primary-font: var(--primary-font);
$secondary-font: var(--secondary-font);
$secondary: var(--secondary);
$primary: var(--primary);
$light: var(--light);
$light-alt: var(--light-alt);
$dark: var(--dark);
// $bg-gradient: var(--bg-gradient);
// $border-radius: 30px 10px 10px 10px;

$transition-fast: 0.3s cubic-bezier(0.5, 1, 0.89, 1);
$transition-slow: 0.6s cubic-bezier(0.5, 1, 0.89, 1);

$colors: (
  "light": $light,
  "light-alt": $light-alt,
  "dark": $dark,
  //   "bg-gradient": $bg-gradient,
);

@each $key, $val in $colors {
  .#{$key} {
    color: $val !important;
  }
}

// Breakpoints

$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

// Min Width

@mixin min-xs {
  @media (min-width: map-get($breakpoints, "xs")) {
    @content;
  }
}

@mixin min-sm {
  @media (min-width: map-get($breakpoints, "sm")) {
    @content;
  }
}

@mixin min-md {
  @media (min-width: map-get($breakpoints, "md")) {
    @content;
  }
}

@mixin min-lg {
  @media (min-width: map-get($breakpoints, "lg")) {
    @content;
  }
}

@mixin min-xl {
  @media (min-width: map-get($breakpoints, "xl")) {
    @content;
  }
}

@mixin min-xxl {
  @media (min-width: map-get($breakpoints, "xxl")) {
    @content;
  }
}

// Max width

@mixin max-xs {
  @media (max-width: map-get($breakpoints, "xs")) {
    @content;
  }
}

@mixin max-sm {
  @media (max-width: map-get($breakpoints, "sm")) {
    @content;
  }
}

@mixin max-md {
  @media (max-width: map-get($breakpoints, "md")) {
    @content;
  }
}

@mixin max-lg {
  @media (max-width: map-get($breakpoints, "lg")) {
    @content;
  }
}

@mixin max-xl {
  @media (max-width: map-get($breakpoints, "xl")) {
    @content;
  }
}

@mixin max-xxl {
  @media (max-width: map-get($breakpoints, "xxl")) {
    @content;
  }
}

// Base CSS

* {
  margin: 0;
  padding: 0;
  outline: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html {
  scroll-behavior: smooth;
}

body {
  margin: 0;
  padding: 0;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.44;
  font-style: normal;
  color: $light;
  font-family: $secondary-font;
  background-color: $dark;
  text-rendering: optimizelegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.page_wrapper {
  position: relative;
  z-index: 1;
}

iframe {
  border: none;
}

a:focus,
a:active,
input,
input:hover,
input:focus,
input:active,
textarea,
textarea:hover,
textarea:focus,
textarea:active {
  outline: none;
}

embed,
object,
video {
  height: auto;
  max-width: 100%;
}

img {
  border: none;
  height: auto;
  max-width: 100%;
  user-select: none;
  vertical-align: middle;
  transition: $transition-slow;
}

// .image_wrap {
//   overflow: hidden;
//   border-radius: $border-radius;

//   img {
//     border-radius: $border-radius;
//   }
// }

ul {
  margin: 0;
  padding: 0;

  li {
    list-style: none;
  }
}

a {
  outline: 0;
  display: inline-block;
  text-decoration: none;
  transition: $transition-fast;

  &:active,
  &:focus,
  &:hover,
  &:visited {
    outline: 0;
    text-decoration: none;
  }
}

.fix {
  overflow: hidden;
}

button {
  padding: 0;
  border: none;
  outline: none;
  background: none;
  display: inline-block;
  transition: $transition-fast;

  &:focus {
    outline: none;
  }
}

h1,
h2,
h3,
h4,
h5,
h6,
a,
p,
b,
i,
u,
ul,
ol,
li,
span {
  margin: 0;
  padding: 0;
  list-style: none;
  text-decoration: none;
  line-height: 100%;
}

h1 {
  font-size: 3.5rem;
}

h2 {
  font-size: 3rem;
}

p {
  color: $light-alt;
  font-family: $secondary-font;
  font-size: 0.95rem;
  font-style: normal;
  font-weight: 400;
  line-height: 150%;
}

hr {
  opacity: 0.1;
  margin: 30px 0;
  background-color: $dark;
}

textarea {
  resize: none;
}

.decoration_wrap {
  z-index: 1;
  position: relative;

  .deco_item {
    z-index: -1;
    position: absolute;
    display: flex;
    flex-direction: column;
    gap: 30px 30px;
  }
}

.section {
  position: relative;
  padding: 4rem 0;
}

.heading {
  color: $light;
  font-family: $primary-font;
  font-size: 3.1rem;
  font-style: normal;
  font-weight: 400;
  line-height: 100%;
  margin-bottom: 1rem;

  @include max-md(){
    font-size: 2.5rem;
  }
}

// Mixins

@mixin p-style($color: $light-alt, $size: 1rem) {
  color: $color;
  font-family: $secondary-font;
  font-size: $size;
  font-style: normal;
  font-weight: 400;
  line-height: 1.44;

  @include max-md(){
    font-size: 0.98rem;
  }
}

@mixin section_heading1($size: 3rem) {
  color: $light;
  font-family: $primary-font;
  font-size: $size;
  font-style: normal;
  font-weight: bold;
  line-height: 100%;
  @include max-md(){
    font-size: 2.5rem;
  }
}

.button {
  display: inline-block;
  position: relative;
  border-radius: 50px;
  background: $light;
  padding-right: 40px;
  border: 1px solid $secondary;
  height: 52px;
  overflow: hidden;
  transition: 0.5s all ease;

  svg {
    position: relative;
    left: 0;
    z-index: 4;
    transform: rotate(0deg);
    transition: 0.5s all ease;
  }

  span {
    position: relative;
    z-index: 4;
    font-weight: 400;
    font-size: 0.99rem;
    background: linear-gradient(180deg, #30a9e5 -103.42%, #0e4777 98.24%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  &::after {
    content: "";
    background: linear-gradient(180deg, #30a9e5 -103.42%, #0e4777 98.24%);
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    transition: 0.5s all ease;
  }

  &:hover {
    background: transparent;
    border-color: transparent;

    &::after {
      opacity: 1;
    }
    svg {
      left: 100%;
      transform: rotate(-180deg);
      path {
        fill: $light;
      }
    }
    span {
      background: linear-gradient(180deg, $light -103.42%, $light 98.24%);
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
  }
}
